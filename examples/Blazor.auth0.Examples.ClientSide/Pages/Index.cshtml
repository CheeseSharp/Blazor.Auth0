@page "/"
@inject Auth0.Authentication.AuthenticationService _authService

<h1>User Info</h1>

@if (_authService.SessionState == Auth0.Models.Enumerations.SessionStates.Active)
{

    <div>
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-2 col-form-label">Picture</label>
            <div class="col-sm-10">
                <img src="@_authService.UserInfo.Picture" alt="..." class="img-thumbnail">
            </div>
        </div>
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-2 col-form-label">Email</label>
            <div class="col-sm-10">
                <input type="text" readonly class="form-control-plaintext" id="staticEmail" value="@_authService.UserInfo.Email">
            </div>
        </div>
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-2 col-form-label">Nickname</label>
            <div class="col-sm-10">
                <input type="text" readonly class="form-control-plaintext" id="staticEmail" value="@_authService.UserInfo.Nickname">
            </div>
        </div>
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-2 col-form-label">Raw JSON</label>
            <div class="col-sm-10">
                <code>
                    @Json.Serialize(_authService.UserInfo)
                </code>
            </div>
        </div>
    </div>



    <button class="btn btn-danger" onclick="@_authService.LogOut">LogOut</button>

}
else
{
    <button class="btn btn-primary" onclick="@_authService.LogIn">Login</button>
}


@functions{

    protected override void OnInit()
    {
        _authService.OnSessionStateChanged += OnSessionStateChangeHandler;
        base.OnInit();
    }

    protected void OnSessionStateChangeHandler(object sender, Auth0.Models.Enumerations.SessionStates state)
    {
        StateHasChanged();
    }

}

